{"version":3,"sources":["server.js"],"names":[],"mappings":"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","file":"server-compiled.js","sourcesContent":["import Express from 'express';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/server';\r\nimport config from './config';\r\nimport favicon from 'serve-favicon';\r\nimport compression from 'compression';\r\nimport httpProxy from 'http-proxy';\r\nimport path from 'path';\r\nimport createStore from './redux/create';\r\nimport ApiClient from './helpers/ApiClient';\r\nimport Html from './helpers/Html';\r\nimport PrettyError from 'pretty-error';\r\nimport http from 'http';\r\nimport https from 'https';\r\nimport fs from 'fs';\r\n\r\nimport { match } from 'react-router';\r\nimport { syncHistoryWithStore } from 'react-router-redux';\r\nimport { ReduxAsyncConnect, loadOnServer } from 'redux-async-connect';\r\nimport createHistory from 'react-router/lib/createMemoryHistory';\r\nimport {Provider} from 'react-redux';\r\nimport getRoutes from './routes';\r\n\r\nconst mysite = ('D:/zsunData/myPro/react-redux-universal-hot-example/src/cert/wanchain.org.key'); //key\r\nconst mysiteCrt = ('D:/zsunData/myPro/react-redux-universal-hot-example/src/cert/3bb55a3526ededcc.crt'); //\r\nconst gd1 = ('D:/zsunData/myPro/react-redux-universal-hot-example/src/cert/gd_bundle-g2-g1.crt');\r\n\r\n\r\nconst targetUrl = 'http://' + config.apiHost + ':' + config.apiPort;\r\nconst pretty = new PrettyError();\r\nconst httpapp = new Express();\r\nconst httpserver = new http.Server(httpapp);\r\n\r\nhttpapp.use('*', function(req, res) {\r\n  console.log(\"HTTP: \" + req.url);\r\n  return res.redirect(\"https://\" + req.headers[\"host\"] + req.url);\r\n});\r\nhttpapp.listen(80);\r\n\r\nconst app = new Express();\r\n\r\n// const server = new http.Server(app);\r\nconst server = https.createServer({\r\n  key: fs.readFileSync(mysite),\r\n  cert: fs.readFileSync(mysiteCrt),\r\n  ca: [fs.readFileSync(gd1)],\r\n  requestCert: false,\r\n  rejectUnauthorized: false\r\n}, app);\r\n\r\nconst proxy = httpProxy.createProxyServer({\r\n  target: targetUrl,\r\n  ws: true\r\n});\r\n\r\napp.use(compression());\r\napp.use(favicon(path.join(__dirname, '..', 'static', 'favicon.ico')));\r\n\r\napp.use(Express.static(path.join(__dirname, '..', 'static')));\r\n\r\n// Proxy to API server\r\napp.use('/api', (req, res) => {\r\n  proxy.web(req, res, {target: targetUrl});\r\n});\r\n\r\napp.use('/ws', (req, res) => {\r\n  proxy.web(req, res, {target: targetUrl + '/ws'});\r\n});\r\n\r\nserver.on('upgrade', (req, socket, head) => {\r\n  proxy.ws(req, socket, head);\r\n});\r\n\r\n// added the error handling to avoid https://github.com/nodejitsu/node-http-proxy/issues/527\r\nproxy.on('error', (error, req, res) => {\r\n  let json;\r\n  if (error.code !== 'ECONNRESET') {\r\n    console.error('proxy error', error);\r\n  }\r\n  if (!res.headersSent) {\r\n    res.writeHead(500, {'content-type': 'application/json'});\r\n  }\r\n\r\n  json = {error: 'proxy_error', reason: error.message};\r\n  res.end(JSON.stringify(json));\r\n});\r\n\r\napp.use((req, res) => {\r\n  if (__DEVELOPMENT__) {\r\n    // Do not cache webpack stats: the script file would change since\r\n    // hot module replacement is enabled in the development env\r\n    webpackIsomorphicTools.refresh();\r\n  }\r\n  const client = new ApiClient(req);\r\n  const memoryHistory = createHistory(req.originalUrl);\r\n  const store = createStore(memoryHistory, client);\r\n  const history = syncHistoryWithStore(memoryHistory, store);\r\n\r\n  function hydrateOnClient() {\r\n    res.send('<!doctype html>\\n' +\r\n      ReactDOM.renderToString(<Html assets={webpackIsomorphicTools.assets()} store={store}/>));\r\n  }\r\n\r\n  if (__DISABLE_SSR__) {\r\n    hydrateOnClient();\r\n    return;\r\n  }\r\n\r\n  match({ history, routes: getRoutes(store), location: req.originalUrl }, (error, redirectLocation, renderProps) => {\r\n    if (redirectLocation) {\r\n      res.redirect(redirectLocation.pathname + redirectLocation.search);\r\n    } else if (error) {\r\n      console.error('ROUTER ERROR:', pretty.render(error));\r\n      res.status(500);\r\n      hydrateOnClient();\r\n    } else if (renderProps) {\r\n      loadOnServer({...renderProps, store, helpers: {client}}).then(() => {\r\n        const component = (\r\n          <Provider store={store} key=\"provider\">\r\n            <ReduxAsyncConnect {...renderProps} />\r\n          </Provider>\r\n        );\r\n\r\n        res.status(200);\r\n\r\n        global.navigator = {userAgent: req.headers['user-agent']};\r\n\r\n        res.send('<!doctype html>\\n' +\r\n          ReactDOM.renderToString(<Html assets={webpackIsomorphicTools.assets()} component={component} store={store}/>));\r\n      });\r\n    } else {\r\n      res.status(404).send('Not found');\r\n    }\r\n  });\r\n});\r\n\r\nif (config.port) {\r\n  server.listen(config.port, (err) => {\r\n    if (err) {\r\n      console.error(err);\r\n    }\r\n    console.info('----\\n==> âœ…  %s is running, talking to API server on %s.', config.app.title, config.apiPort);\r\n    console.info('==> ðŸ’»  Open http://%s:%s in a browser to view the app.', config.host, config.port);\r\n  });\r\n} else {\r\n  console.error('==>     ERROR: No PORT environment variable has been specified');\r\n}\r\n"]}