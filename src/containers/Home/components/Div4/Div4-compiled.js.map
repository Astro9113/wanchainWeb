{"version":3,"sources":["Div4.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOI;AACA;AACA;AACA;;iCAES;AACP;AACA,gBAAM,QAAQ,QAAQ,uBAAR,CAAd;AACA,gBAAM,QAAQ,QAAQ,uBAAR,CAAd;AACA,gBAAM,QAAQ,QAAQ,uBAAR,CAAd;AACA,gBAAM,QAAQ,QAAQ,uBAAR,CAAd;;AAEA,gBAAM,MAAM,QAAQ,qBAAR,CAAZ;AACA,gBAAM,MAAM,QAAQ,qBAAR,CAAZ;AACA,gBAAM,QAAQ,QAAQ,uBAAR,CAAd;AACA,gBAAM,OAAO,QAAQ,sBAAR,CAAb;;AAEA,gBAAM,SAAS,QAAQ,aAAR,CAAf;AACA,mBACM;AAAA;AAAA;AACI;AAAA;AAAA,sBAAK,WAAW,OAAO,cAAvB;AACI;AAAA;AAAA,0BAAK,WAAU,WAAf;AACI,+DAAK,KAAK,KAAV,EAAiB,IAAG,UAApB,GADJ;AAEI;AAAA;AAAA,8BAAK,WAAW,OAAO,iBAAP,GAA2B,WAA3C;AACI,mEAAK,KAAK,GAAV,GADJ;AAEI;AAAA;AAAA;AAAA;AAAA,6BAFJ;AAGI;AAAA;AAAA;AAAA;AAAA;AAHJ;AAFJ;AADJ,iBADJ;AAeI;AAAA;AAAA,sBAAK,WAAW,OAAO,cAAvB;AACI;AAAA;AAAA,0BAAK,WAAU,WAAf;AACI;AAAA;AAAA,8BAAK,WAAW,OAAO,iBAAP,GAA2B,WAA3C;AACI,mEAAK,KAAK,GAAV,GADJ;AAEI;AAAA;AAAA;AAAA;AAAA,6BAFJ;AAGI;AAAA;AAAA;AAAA;AAAA;AAHJ,yBADJ;AAUI,+DAAK,KAAK,KAAV,EAAiB,IAAG,UAApB;AAVJ;AADJ,iBAfJ;AA8BI;AAAA;AAAA,sBAAK,WAAW,OAAO,cAAvB;AACI;AAAA;AAAA,0BAAK,WAAU,WAAf;AACI,+DAAK,KAAK,KAAV,EAAiB,IAAG,UAApB,GADJ;AAEI;AAAA;AAAA,8BAAK,WAAW,OAAO,iBAAP,GAA2B,WAA3C,EAAwD,IAAG,oBAA3D;AACI,mEAAK,KAAK,KAAV,GADJ;AAEI;AAAA;AAAA;AAAA;AAAA,6BAFJ;AAGI;AAAA;AAAA;AAAA;AAAA;AAHJ;AAFJ;AADJ,iBA9BJ;AA4CI;AAAA;AAAA,sBAAK,WAAW,OAAO,cAAvB;AACI;AAAA;AAAA,0BAAK,WAAU,WAAf;AACI;AAAA;AAAA,8BAAK,WAAW,OAAO,iBAAP,GAA2B,WAA3C;AACI,mEAAK,KAAK,IAAV,GADJ;AAEI;AAAA;AAAA;AAAA;AAAA,6BAFJ;AAGI;AAAA;AAAA;AAAA;AAAA;AAHJ,yBADJ;AASI,+DAAK,KAAK,KAAV,EAAiB,IAAG,UAApB;AATJ;AADJ;AA5CJ,aADN;AA6DD;;;EAjFc,gBAAM,S;AAmFzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;kBACe,I","file":"Div4-compiled.js","sourcesContent":["import React, {PropTypes}  from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n@connect(\r\n    state => ({clientWidth: state.auth.clientWidth,}),\r\n    )\r\nclass Div4 extends React.Component {\r\n\r\n    // static propTypes = {\r\n    //     language: PropTypes.string,\r\n    //     clientWidth: PropTypes.number,\r\n    // };\r\n\r\n    render() {\r\n      // const {language, clientWidth} = this.props;\r\n      const part1 = require('../../image/part1.png');\r\n      const part2 = require('../../image/part2.png');\r\n      const part3 = require('../../image/part3.png');\r\n      const part4 = require('../../image/part4.png');\r\n\r\n      const one = require('../../image/one.png');\r\n      const two = require('../../image/two.png');\r\n      const three = require('../../image/three.png');\r\n      const four = require('../../image/four.png');\r\n\r\n      const styles = require('./Div4.scss');\r\n      return (\r\n            <div>\r\n                <div className={styles.officalModule3}>\r\n                    <div className=\"container\">\r\n                        <img src={part1} id=\"div3img1\"/>\r\n                        <div className={styles.officalModule3Div + ' col-lg-8'}>\r\n                            <img src={one}/>\r\n                            <h2>去中心化的跨链机制</h2>\r\n                            <p>\r\n                                在万维链上，我们将支持主流公链的跨链交易（如BTC、ETH）、联盟链之间的资产跨链交易，以及公链与联盟链的跨链交易。\r\n                                通过类联合锚定，多方计算和门限秘钥共享机制结合多角色节点设计，完成跨链锁定账号的分布式秘钥管理。\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.officalModule4}>\r\n                    <div className=\"container\">\r\n                        <div className={styles.officalModule4Div + ' col-lg-7'}>\r\n                            <img src={two}/>\r\n                            <h2>通用跨链协议</h2>\r\n                            <p>\r\n                                万维链通用跨链协议是钱包与万维链节点，万维链节点与同构链节点的通信协议，通过协议完成跨链交易相关数据的请求、\r\n                                确认等相关通信。根据通用协议社区开发者可以根据应用场景开发独立的多资产钱包、建立不同开放程度的链条。\r\n                                通过类联合锚定，多方计算和门限秘钥共享机制结合多角色节点设计，完成跨链锁定账号的分布式秘钥管理。\r\n                            </p>\r\n                        </div>\r\n                        <img src={part2} id=\"div3img2\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.officalModule3}>\r\n                    <div className=\"container\">\r\n                        <img src={part3} id=\"div3img3\"/>\r\n                        <div className={styles.officalModule3Div + ' col-lg-8'} id=\"officalModule3Div2\">\r\n                            <img src={three}/>\r\n                            <h2>交易隐私保护</h2>\r\n                            <p>\r\n                                万维链上本身及同构链支持基于智能合约的资产的交易隐私保护。利用环签名和一次性地址，万维链实现智能合约代币的隐私保护，\r\n                                万维链不但是全球第一个实现智能合约代币交易的隐私保护，更让万维链及同构联盟链更好的适用于金融等应用场景。\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.officalModule4}>\r\n                    <div className=\"container\">\r\n                        <div className={styles.officalModule4Div + ' col-lg-7'}>\r\n                            <img src={four}/>\r\n                            <h2>复杂场景支持</h2>\r\n                            <p>\r\n                                于智能合约和通用协议，社区的开发者可以开发更加复杂的场景应用。尤其是需要多币种支持的场景。\r\n                                联盟链与公链的连接，联盟链之间的连接为区块链今后的应用前景提供了更多的选择，封闭与开放不再是非此即彼的选择题。\r\n                            </p>\r\n                        </div>\r\n                        <img src={part4} id=\"div3img4\"/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         changeLanguage: (data) => {\r\n//             dispatch(changeLanguage(data))\r\n//         },\r\n//     };\r\n// };\r\n//\r\n// const mapStateToProps = (state) => ({\r\n//     language : state.lang.language,\r\n//     clientWidth: state.lang.clientWidth,\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Div4)\r\nexport default Div4;\r\n"]}